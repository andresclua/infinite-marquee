{"id":"test.js","dependencies":[{"name":"/Users/andres/Documents/Personal/dev/researchFrontend/infinite-marquee/package.json","includedInParent":true,"mtime":1675829573116}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar Test = /*#__PURE__*/function () {\n  function Test() {\n    _classCallCheck(this, Test);\n    this.init();\n  }\n  _createClass(Test, [{\n    key: \"init\",\n    value: function init() {\n      console.log('works test');\n      var fruitList = document.getElementById(\"modal\");\n\n      // Add 3 new <li>'s to the list of fruits\n      fruitList.insertAdjacentHTML(\"beforeend\", \"\\n    <li>Pear</li>\\n    <li>Orange</li>\\n    <li>Grape</li>\\n// \");\n    }\n  }]);\n  return Test;\n}();\nvar _default = Test;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":13,"column":4},"source":"test.js","original":{"line":1,"column":6},"name":"Test"},{"generated":{"line":13,"column":8},"source":"test.js","original":{"line":1,"column":10}},{"generated":{"line":14,"column":2},"source":"test.js","original":{"line":2,"column":4}},{"generated":{"line":14,"column":18},"source":"test.js","original":{"line":2,"column":17}},{"generated":{"line":15,"column":4},"source":"test.js","original":{"line":2,"column":17}},{"generated":{"line":16,"column":4},"source":"test.js","original":{"line":3,"column":8}},{"generated":{"line":16,"column":8},"source":"test.js","original":{"line":3,"column":12}},{"generated":{"line":16,"column":9},"source":"test.js","original":{"line":3,"column":13},"name":"init"},{"generated":{"line":16,"column":13},"source":"test.js","original":{"line":3,"column":17}},{"generated":{"line":16,"column":15},"source":"test.js","original":{"line":3,"column":19}},{"generated":{"line":17,"column":2},"source":"test.js","original":{"line":4,"column":4}},{"generated":{"line":18,"column":2},"source":"test.js","original":{"line":4,"column":5}},{"generated":{"line":19,"column":4},"source":"test.js","original":{"line":4,"column":5}},{"generated":{"line":20,"column":4},"source":"test.js","original":{"line":4,"column":5}},{"generated":{"line":20,"column":11},"source":"test.js","original":{"line":5,"column":4}},{"generated":{"line":20,"column":27},"source":"test.js","original":{"line":5,"column":10}},{"generated":{"line":21,"column":6},"source":"test.js","original":{"line":6,"column":8},"name":"console"},{"generated":{"line":21,"column":13},"source":"test.js","original":{"line":6,"column":15}},{"generated":{"line":21,"column":14},"source":"test.js","original":{"line":6,"column":16},"name":"log"},{"generated":{"line":21,"column":17},"source":"test.js","original":{"line":6,"column":19}},{"generated":{"line":21,"column":18},"source":"test.js","original":{"line":6,"column":20}},{"generated":{"line":21,"column":30},"source":"test.js","original":{"line":6,"column":32}},{"generated":{"line":21,"column":31},"source":"test.js","original":{"line":6,"column":33}},{"generated":{"line":22,"column":6},"source":"test.js","original":{"line":8,"column":10}},{"generated":{"line":22,"column":10},"source":"test.js","original":{"line":8,"column":16},"name":"fruitList"},{"generated":{"line":22,"column":19},"source":"test.js","original":{"line":8,"column":25}},{"generated":{"line":22,"column":22},"source":"test.js","original":{"line":8,"column":28},"name":"document"},{"generated":{"line":22,"column":30},"source":"test.js","original":{"line":8,"column":36}},{"generated":{"line":22,"column":31},"source":"test.js","original":{"line":8,"column":37},"name":"getElementById"},{"generated":{"line":22,"column":45},"source":"test.js","original":{"line":8,"column":51}},{"generated":{"line":22,"column":46},"source":"test.js","original":{"line":8,"column":52}},{"generated":{"line":22,"column":53},"source":"test.js","original":{"line":8,"column":59}},{"generated":{"line":22,"column":54},"source":"test.js","original":{"line":8,"column":60}},{"generated":{"line":24,"column":6},"source":"test.js","original":{"line":10,"column":0}},{"generated":{"line":25,"column":6},"source":"test.js","original":{"line":11,"column":0},"name":"fruitList"},{"generated":{"line":25,"column":15},"source":"test.js","original":{"line":11,"column":9}},{"generated":{"line":25,"column":16},"source":"test.js","original":{"line":11,"column":10},"name":"insertAdjacentHTML"},{"generated":{"line":25,"column":34},"source":"test.js","original":{"line":11,"column":28}},{"generated":{"line":25,"column":35},"source":"test.js","original":{"line":11,"column":29}},{"generated":{"line":25,"column":46},"source":"test.js","original":{"line":11,"column":40}},{"generated":{"line":25,"column":116},"source":"test.js","original":{"line":15,"column":5}},{"generated":{"line":26,"column":4},"source":"test.js","original":{"line":16,"column":4}},{"generated":{"line":27,"column":2},"source":"test.js","original":{"line":16,"column":5}},{"generated":{"line":28,"column":2},"source":"test.js","original":{"line":16,"column":5}},{"generated":{"line":29,"column":0},"source":"test.js","original":{"line":16,"column":5}},{"generated":{"line":30,"column":0},"source":"test.js","original":{"line":16,"column":5}},{"generated":{"line":30,"column":15},"source":"test.js","original":{"line":18,"column":15},"name":"Test"},{"generated":{"line":30,"column":19},"source":"test.js","original":{"line":18,"column":19}},{"generated":{"line":31,"column":0},"source":"test.js","original":{"line":18,"column":19}}],"sources":{"test.js":"class Test{\n    constructor(){\n        this.init()\n    }\n    init(){\n        console.log('works test');\n\n          const fruitList = document.getElementById(\"modal\");\n\n// Add 3 new <li>'s to the list of fruits\nfruitList.insertAdjacentHTML(\"beforeend\", `\n    <li>Pear</li>\n    <li>Orange</li>\n    <li>Grape</li>\n// `);\n    }\n}\nexport default Test;"},"lineCount":null}},"error":null,"hash":"2ab02ff0ffb4ec5e0188fdcc892b2392","cacheData":{"env":{}}}